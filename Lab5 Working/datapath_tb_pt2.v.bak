module datapath_tb;
reg[15:0] datapath_in;
reg[2:0] writenum;
reg write;
reg[2:0] readnum;
reg clk;
reg vsel, loada, loadb, asel, bsel, loadc, loads;
reg[1:0] shift,ALUop;
wire [15:0] datapath_out;
wire Z_out;
reg err=0;


datapath dut(datapath_in,writenum,write,readnum,loadc,loads,clk,ALUop,loada,loadb,shift,vsel,asel,bsel,datapath_out,Z_out);

task test;
  input[15:0] expected_datapath_out;
  begin
    if (datapath_tb.dut.datapath_out !== expected_datapath_out)begin
       $display("ERROR** datapath_out is %b, expected %b", datapath_tb.dut.datapath_out,expected_datapath_out);
       err = 1;
  end
  end
  endtask

  initial begin
    clk = 0; #5;
    forever begin
      clk = 1; #5;
      clk = 0; #5;
    end
  end

  initial begin

#10;

   
datapath_in = 16'b0000000000000111;
    vsel = 1;
    writenum = 3'b000; //store 7 into R0;
    write = 1;
	#10;
    readnum = 3'b000;
    loadb = 1;#10;
    loadb = 0; 

	#10;
	datapath_in = 16'b0000000000000010;
	writenum = 3'b001; //store  into R1;
	write = 1;
#10;
    readnum = 3'b001;
    loada = 1; #10;
    loada = 0;
    ALUop = 2'b00;
    asel = 0;
    bsel = 0;
    shift = 2'b01;
    loadc = 1;
    loads = 1;
    #10;

    loadc = 0;
    vsel = 0;
    write = 1;
    writenum=3'b010; //stores result of alu in R2
    test(16'b0000000000010000); //Test answer
#10;



$stop;
end
endmodule

